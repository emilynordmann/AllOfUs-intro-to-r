[{"path":"index.html","id":"introduction","chapter":"Introduction","heading":"Introduction","text":"course designed completed approximately three weeks. first two weeks, several chapters workbook work asynchronously accompanying walkthrough video suggested reading list. time takes work chapter vary considerably depending previous experience R programming.complete novices, estimate chapter take 1-2 hours likely want need watch walkthrough video full. experience programming likely take less time included links resources can go beyond core material provided course.addition asynchronous content, two live office hour sessions Week 2 3. sessions, instructors answer questions content covered workbook apply using Us Researcher Workbench, well conducting quizzes help consolidate learning. Finally, complete course, 20-item multiple-choice quiz.","code":""},{"path":"index.html","id":"instructors","chapter":"Introduction","heading":"0.1 Instructors","text":"Dr. Emily Nordmann teaching-focused Senior Lecturer School Psychology Neuroscience University Glasgow. teaches research methods, individual differences data skills R well acting Deputy Director Education. vocal advocate open science open educational resources. member PsyTeachR team authored several open-access data skills books tutorials. lives Glasgow, Scotland wife Kathleen cat Khaleesi, named final season Game Thrones aired.Dr. Javan K. Carter bioinformaticist RTI International. researches genomic transcriptomic data understand genotype- phenotype correlation genetic architecture complex traits diseases. Within RTI, lead co-lead informatics scientist several projects assists number projects associated various data types. also evolutionary genomicist training. uses bash, JavaScript, R primary coding languages. loves teach educate people wonders computational biology introduce people coding first time!","code":""},{"path":"index.html","id":"progress","chapter":"Introduction","heading":"0.2 Progress Tracker","text":"course designed completed approximately three weeks. help plan time keep track, provided Progress Tracker checklist details need need .Download Progress Tracker Word documentDownload Progress Tracker PDF","code":""},{"path":"index.html","id":"course-overview","chapter":"Introduction","heading":"0.3 Course Overview","text":"video gives overview course syllabus requirements. important watch video starting course.Download Course Overview PowerPoint slides","code":""},{"path":"installing-r.html","id":"installing-r","chapter":"1 Installing R","heading":"1 Installing R","text":"","code":""},{"path":"installing-r.html","id":"intended-learning-outcomes","chapter":"1 Installing R","heading":"1.1 Intended Learning Outcomes","text":"end chapter able :Install R RStudioUpdate R, Rstudio, packagesWhilst use Us Researcher Workbench conduct analyses Us database, access regular copy R machine can use free--charge helpful learning R.","code":""},{"path":"installing-r.html","id":"walkthrough-video","chapter":"1 Installing R","heading":"1.2 Walkthrough video","text":"encourage read workbook attempt step watching video help consolidate learning.Installing R RStudio usually straightforward. sections explain addition walkthrough video, helpful YouTube video . run difficulties (example admin rights machine), recommend using RStudio Cloud. RStudio Cloud almost features local installation R runs browser. differences import export data manage projects cloud local installation, however, part differences minimal.","code":""},{"path":"installing-r.html","id":"intro-rstudio","chapter":"1 Installing R","heading":"1.3 R and RStudio","text":"R programming language write code RStudio Integrated Development Environment (IDE) makes working R easier. Think knowing English using plain text editor like NotePad write book versus using word processor like Microsoft Word. , much harder without things like spell-checking formatting able use advanced features Word developed. similar way, can use R without R Studio (sometimes referred \"Base R\") recommend . RStudio serves text editor, file manager, spreadsheet viewer, . key thing remember although work using RStudio course, actually using two pieces software means time--time, may separate updates.","code":""},{"path":"installing-r.html","id":"installing-base-r","chapter":"1 Installing R","heading":"1.4 Installing Base R","text":"Install base R. Choose download link operating system (Linux, Mac OS X, Windows).Mac, install latest release newest R-x.x.x.pkg link (legacy version older operating system). may also need install XQuartz able use visualisation packages.installing Windows version, choose \"base\" subdirectory click download link top page.using Linux, choose specific operating system follow installation instructions.","code":""},{"path":"installing-r.html","id":"installing-rstudio","chapter":"1 Installing R","heading":"1.5 Installing RStudio","text":"Go rstudio.com download RStudio Desktop (Open Source License) version operating system list titled Installers Supported Platforms.","code":""},{"path":"installing-r.html","id":"installing-rtools","chapter":"1 Installing R","heading":"1.6 Installing RTools","text":"using Windows, install R, also install RTools; use \"recommended\" version highlighted near top list. RTools used installing loading packages. can get started without installing RTools, problems installing loading packages, first thing try.RTools require put \"PATH\". instructions can seem bit vague - easiest way open RStudio, run code console:done , restart R clicking Session - Restart R run code console give path RTools installation:","code":"\nwrite('PATH=\"${RTOOLS40_HOME}\\\\usr\\\\bin;${PATH}\"', file = \"~/.Renviron\", append = TRUE)\nSys.which(\"make\")##                               make \n## \"C:\\\\rtools40\\\\usr\\\\bin\\\\make.exe\""},{"path":"installing-r.html","id":"rstudio-settings","chapter":"1 Installing R","heading":"1.7 RStudio Settings","text":"settings fix immediately updating RStudio. Go Global Options... Tools menu (âŒ˜,), General tab, uncheck box says Restore .RData workspace startup. keep things around workspace, things get messy, unexpected things happen. always start clear workspace. also means never want save workspace exit, set Never. thing want save scripts.may also want change appearance code. Different fonts themes can sometimes help visual difficulties dyslexia.\nFigure 1.1: RStudio General Appearance settings\nmay also want change settings Code tab. example, people prefer two spaces instead tabs code, like able see whitespace characters. matter personal preference.\nFigure 1.2: RStudio Code settings\n","code":""},{"path":"installing-r.html","id":"installing-latex","chapter":"1 Installing R","heading":"1.8 Installing LaTeX","text":"can install LaTeX typesetting system produce PDF reports RStudio. Without additional installation, able produce reports HTML PDF. generate PDF reports, additionally need install tinytex (Xie, 2023) run following code:Please note producing PDF reports necessary learn R complete course, trouble step, can skip return comfortable R (decide PDF reports useful).","code":"\n# run this in the console\ninstall.packages(\"tinytex\")\ntinytex::install_tinytex()"},{"path":"installing-r.html","id":"updating-r","chapter":"1 Installing R","heading":"1.9 Updating R, RStudio, and packages","text":"time--time, updated versions R, RStudio, packages use (e.g., ggplot) become available. Remember separate, different process come different considerations. recommend updating latest version start new project. definitely recommend updating middle project middle semester bring advice based personal experience pain.","code":""},{"path":"installing-r.html","id":"updating-rstudio","chapter":"1 Installing R","heading":"1.10 Updating RStudio","text":"RStudio easiest component update. Typically, updates RStudio affect code, instead add new features, like spell-check upgrades RStudio can . usually little downside updating RStudio easy .Click Help - Check updates\nFigure 1.3: Updating RStudio\nupdate available, prompt download can install usual.","code":""},{"path":"installing-r.html","id":"updating-r-1","chapter":"1 Installing R","heading":"1.11 Updating R","text":"Finally, may also wish update R . key thing aware update R, just download latest version website, lose packages.","code":""},{"path":"installing-r.html","id":"windows","chapter":"1 Installing R","heading":"1.11.1 Windows","text":"easiest way update R Windows cause huge headache use installr package. use updateR() function, series dialogue boxes appear. fairly self-explanatory full step--step guide available use installr, important bit select \"Yes\" asked like copy packages older version R.","code":"\n# Install the installr package\ninstall.packages(\"installr\")\n\n# Run the update function\ninstallR::updateR()"},{"path":"installing-r.html","id":"mac","chapter":"1 Installing R","heading":"1.11.2 Mac","text":"Mac, can use updateR package. need install GitHub. asked type system password (use log computer) console pane. relevant, ask want restore packages new major version.","code":"\n# install from github\ndevtools::install_github(\"AndreaCirilloAC/updateR\")\n\n# update your R version, you will need your system password\nupdateR::updateR()"},{"path":"installing-r.html","id":"updating-packages","chapter":"1 Installing R","heading":"1.12 Updating packages","text":"completely new R installed packages yet, section make great deal sense, just remember can come back future.Package developers occasionally release updates packages. typically add new functions package, fix amend existing functions. aware package updates may cause previous code stop working. tend happen minor updates packages, occasionally major updates, can serious issues developer made fundamental changes code works. reason, recommend updating packages beginning academic year (semester) - assessment deadline just case!update individual package, easiest way use install.packages() function, always installs recent version package.update multiple packages, indeed packages, RStudio provides helpful tools. Click Tools - Check Package Updates. dialogue box appear can select packages wish update. aware select packages, may take time unable use R whilst process completes.\nFigure 1.4: Updating packages RStudio\n","code":"\ninstall.packages(\"tidyverse\")"},{"path":"installing-r.html","id":"package-install-troubleshooting","chapter":"1 Installing R","heading":"1.13 Troubleshooting","text":"Occasionally, might problem packages seemingly refuse update install. Emily, rlang vctrs cause end trouble. packages likely ever explicitly load, required beneath surface R things like knit Markdown files etc.","code":""},{"path":"installing-r.html","id":"non-zero-exit-status","chapter":"1 Installing R","heading":"1.13.1 Non-zero exit status","text":"try update package get error message says something like Warning install.packages : installation package â€˜vctrsâ€™ non-zero exit status perhaps Error loadNamespace(, c(lib.loc, .libPaths()), versionCheck = vI[[]]) :  namespace 'rlang' 0.4.9 loaded, >= 0.4.10 required one solution found manually uninstall package, restart R, install package new, rather trying update existing version. installr package also useful function uninstalling packages.","code":"\n# Load installr\nlibrary(installr)\n\n# Uninstall the problem package\nuninstall.packages(\"package_name\")\n\n# Then restart R using session - restart R\n# Then install the package fresh\n\ninstall.packages(\"package\")"},{"path":"installing-r.html","id":"cannot-open-file","chapter":"1 Installing R","heading":"1.13.2 Cannot open file","text":"may get following error trying install packages :Error install packages : open file 'C:/.....': Permission deniedThis usually indicates permissions problem writing default library (folder packages kept ). Sometimes means need install R RStudio administrator run administrator.One fix may change library location using following code (check \"C:/Program Files/R\" version instead \"R-3.5.2\"):works can install packages, set library path permanently:Install usethis packageRun usethis::edit_r_profile() console; open blank filePaste file (version ): .libPaths(c(\"C:/Program Files/R/R-3.5.2/library\"))Save close fileRestart R changes take effectThe code .Rprofile now run every time start R.","code":"\n# change the library path\n.libPaths(c(\"C:/Program Files/R/R-3.5.2/library\"))"},{"path":"installing-r.html","id":"rstudio-cloud","chapter":"1 Installing R","heading":"1.13.3 RStudio Cloud","text":"recommend local installation R RStudio, least means need active internet connection use . However, difficulty installing R, Rstudio, next chapter, packages, strongly recommend using RStudio Cloud runs browser. purposes course, little difference learning local installation using cloud. matters get running feel comfortable set-, installation issues, take break, use RStudio Cloud instead, return installation later point.","code":""},{"path":"intro.html","id":"intro","chapter":"2 Intro to R and RStudio","heading":"2 Intro to R and RStudio","text":"","code":""},{"path":"intro.html","id":"ilo-intro","chapter":"2 Intro to R and RStudio","heading":"2.1 Intended Learning Outcomes","text":"end chapter able :able install add-packagesBe able get help packages functionsBe able create objects writing running code consolePlease note completely new R, may fully understand everything chapter first time. Almost concepts explained throughout course feel comfortable continued practice. recommend re-reading chapter towards end course likely understand lot .Download RStudio IDE Cheatsheet.","code":""},{"path":"intro.html","id":"walkthrough-video-1","chapter":"2 Intro to R and RStudio","heading":"2.2 Walkthrough video","text":"encourage read workbook attempt step watching video help consolidate learning.","code":""},{"path":"intro.html","id":"intro-r-rstudio","chapter":"2 Intro to R and RStudio","heading":"2.3 R and RStudio","text":"","code":""},{"path":"intro.html","id":"rstudio_ide","chapter":"2 Intro to R and RStudio","heading":"2.3.1 RStudio","text":"installed R, gave computer ability process R programming language, also installed app called \"R\". never use app. Instead, use RStudio. RStudio arranged four window panes.default, upper left pane source pane, view, write, edit code files view data tables spreadsheet format. first open RStudio, pane display open document load data - worry, get soon.\nFigure 2.1: RStudio IDE\nlower left pane console pane, can type commands view output messages. can write code console test . code run can create objects environment, code saved. need write code script source pane save .right panes several different tabs show information code. used tabs upper right pane Environment tab Help tab. environment tab lists information objects defined code. learn Help tab SectionÂ 2.5.4.lower right pane, used tabs Files tab directory structure, Plots tab plots made script, Packages tab managing add-packages (see SectionÂ 2.5), Viewer tab display reports created scripts. can change location panes tabs shown Preferences > Pane Layout although new R, suggest just keeping defaults now screen looks like screen.","code":""},{"path":"intro.html","id":"intro-reproducibility","chapter":"2 Intro to R and RStudio","heading":"2.3.2 Reproducibility","text":"One main reasons learn R can create reproducible reports. involves writing scripts transform data, create summaries visualisations, embed report way always gives results.things reproducibly, others (future ) can understand check work. can also reuse work easily. example, need run set analyses year new cohort data, reproducible report allows download new data create report within seconds. might take little longer set report first instance reproducible methods, time saves long run invaluable.SectionÂ 1.7 shows change two important settings global Options increase reproducibility. settings :Restore .RData workspace startup: CheckedNot CheckedSave workspace .RData exit: AlwaysNeverAsk","code":""},{"path":"intro.html","id":"themes-and-accessiblilty","chapter":"2 Intro to R and RStudio","heading":"2.3.3 Themes and accessiblilty","text":"can customise R Studio looks make work . Click Tools - Global Options - Appearance. can change default font, font size, general appearance R Studio, including using dark mode. Play around settings see prefer - going spend lot time R, might well look nice!","code":""},{"path":"intro.html","id":"intro-sessions","chapter":"2 Intro to R and RStudio","heading":"2.4 Sessions","text":"settings configured correctly, open RStudio start writing code, loading packages, creating objects, new session Environment tab completely empty. find code working figure , might worth restarting R session. clear environment detach loaded packages - think like restarting phone. several ways can restart R:Menu: Session > Restart RCmd-Shift-F10 Ctl-Shift-F10type .rs.restartR() consoleTry now. Additionally, now good time create notebook can keep record useful hints tips things try code working. Add \"restart R session\" notebook first item.","code":""},{"path":"intro.html","id":"packages","chapter":"2 Intro to R and RStudio","heading":"2.5 Packages and functions","text":"install R access range functions including options data wrangling statistical analysis. functions included default installation typically referred base R can think like default apps come pre-loaded phone.function name refers code can reuse. using functions provided packages, can also write functions.example, function sum() included base R, expect. console, run code:One great things R, however, user extensible: anyone can create new add-extends functionality. currently thousands packages R users created solve many different kinds problems, just simply fun. example, packages data visualisation, machine learning, interactive dashboards, web scraping, playing games Sudoku.Add-packages distributed base R, downloaded installed archive, way , instance, download install PokemonGo smartphone. main repository packages reside called CRAN, Comprehensive R Archive Network.important distinction installing package loading package.","code":"\nsum(1,2,3)## [1] 6"},{"path":"intro.html","id":"install-package","chapter":"2 Intro to R and RStudio","heading":"2.5.1 Installing a package","text":"done using install.packages(). like installing app phone: app remain installed remove . instance, want use PokemonGo phone, install App Store Play Store; re-install time want use . launch app, run background close restart phone. Likewise, install package, package available (loaded) every time open R.Install tidyverse package system. package main package use throughout book data wrangling, summaries, visualisation.get message says something like package â€˜tidyverseâ€™ successfully unpacked MD5 sums checked, installation successful. get error package installed, check troubleshooting section SectionÂ 1.13.Never install package inside script. console pane. put code install package script, risk installing package mulitple times. waste time, may accidentally install later version package want breaks code.can also install multiple packages . command install packages using course. Depending set-connection speed, might take anywhere couple minutes 10+ minutes.devtools package, can also install packages repositories CRAN, github. following code installs package associated paper Emily wrote data visualization.","code":"\n# type this in the console pane\ninstall.packages(\"tidyverse\")\npackages <- c(\n  \"tidyverse\",   # for everything\n  \"patchwork\",   # for multi-part plots\n  \"ggthemes\",    # for themed plots\n  \"devtools\",    # for installing github packages\n  \"rmarkdown\",   # for reproducible reports\n  \"medicaldata\", # for medical datasets\n  \"gapminder\",   # for gapminder dataset\n  \"psych\",       # for descriptive stats (and other things)\n  \"plotly\"       # for interactive plots  \n)\n\n# determine which need to be installed\nnew_packages <- packages[!packages %in% installed.packages()]\n\ninstall.packages(new_packages)\n# install data viz package \ndevtools::install_github(\"psyteachr/introdataviz\")"},{"path":"intro.html","id":"loading-a-package","chapter":"2 Intro to R and RStudio","heading":"2.5.2 Loading a package","text":"done using library() function. like launching app phone: functionality app launched remains close app restart. example, run library(patchwork) within session, functions package referred patchwork made available R session. next time start R, need run library(patchwork) want access package.installing thetidyverse package, can load current R session follows:might get red text load package, normal. usually warning package functions name packages already loaded.can use convention package::function() indicate add-package function resides. instance, see readr::read_csv(), refers function read_csv() readr add-package. package loaded using library(), specify package name function unless conflict (e.g., two packages loaded function name).","code":"\nlibrary(tidyverse)"},{"path":"intro.html","id":"tidyverse","chapter":"2 Intro to R and RStudio","heading":"2.5.3 Tidyverse","text":"tidyverseis meta-package loads several packages using every chapter course:ggplot2, data visualisationreadr, data importtidyr, data tidyingdplyr, data manipulationstringr, stringsforcats, factorspurrr, repeating things","code":""},{"path":"intro.html","id":"function-help","chapter":"2 Intro to R and RStudio","heading":"2.5.4 Function Help","text":"load tidyverse automatically loads packages, however, can helpful know package function comes need Google . function base R loaded package, can type ?function_name console access help file. top help give function package name.package loaded, use ?package_name::function_name specify package help() function. sure package function , use shortcut ??function_name.Function help always organised way. example, look help ?base::sample. top, tells name function package curly brackets, short description function, followed longer description. Usage section shows function arguments. arguments default values, shown like function(arg = default). Arguments section lists argument explanation. may Details section even detail functions. Examples section last, shows examples can run console window see function works.first argument mean function? trimna.rmmeanxWhat package read_excel ? readrreadxlbasestats","code":"\n# if the package is loaded\n?ggplot2\nhelp(\"ggplot2\")\n\n# works whether or not the package is loaded\n?ggplot2::ggplot\nhelp(\"ggplot\", package=\"ggplot2\") \n\n# shows a list of potentially matching functions\n??ggplot"},{"path":"intro.html","id":"arguments","chapter":"2 Intro to R and RStudio","heading":"2.5.5 Arguments","text":"functions allow/require specify one arguments. options can set. can look arguments/options function using help documentation. arguments required, optional. Optional arguments often use default (normally specified help documentation) enter value.example, look help documentation function sample() randomly samples items list.help documentation sample() appear bottom right help panel. usage section, see sample() takes following form:arguments section, explanations arguments. x list items want choose , size number items want choose, replace whether item may selected , prob gives probability item chosen. details section notes values entered replace prob use defaults FALSE (item can chosen ) NULL (items equal probability chosen). default value x size, must specified otherwise code run.try example just change required arguments x size ask R choose 5 random letters (letters built-vector 26 lower-case Latin letters).sample() generates random sample. time run code, generate different set random letters (try ). function set.seed() controls random number generator - using functions use randomness (sample()), running set.seed() ensure get result (many cases may want ). get numbers , run set.seed(1242016) console, run sample(x = letters, size = 5) .Now can change default value replace argument produce set letters allowed duplicates.time R still produced 5 random letters, now set letters two instances \"k\". Always remember use help documentation help understand arguments function requires.","code":"\n?sample\nsample(x, size, replace = FALSE, prob = NULL)\nsample(x = letters, size = 5)## [1] \"z\" \"v\" \"y\" \"w\" \"j\"\nset.seed(8675309)\nsample(x = letters, size = 5, replace = TRUE)## [1] \"t\" \"k\" \"j\" \"k\" \"m\""},{"path":"intro.html","id":"argument-names","chapter":"2 Intro to R and RStudio","heading":"2.5.6 Argument names","text":"examples, written argument names code (.e., x, size, replace), however, strictly necessary. following two lines code produce result (although time run sample() produce slightly different result, random, still work ):Importantly, write argument names, R use default order arguments. sample assume first value enter x. second value size third value replace.write argument names can write arguments whatever order like:first learning R, may find useful write argument names can help remember understand part function . However, skills progress may find quicker omit argument names also see examples code online use argument names, important able understand argument bit code referring (look help documentation check).course, always write argument names first time use function. However, subsequent uses may omitted.","code":"\nsample(x = letters, size = 5, replace = TRUE)\nsample(letters, 5, TRUE)\nsample(size = 5, replace = TRUE, x = letters)"},{"path":"intro.html","id":"tab-auto-complete","chapter":"2 Intro to R and RStudio","heading":"2.5.7 Tab auto-complete","text":"One useful feature R Studio tab auto-complete functions (see Figure 2.2). write name function press tab key, R Studio show arguments function takes along brief description. press enter argument name fill name , just like auto-complete phone. incredibly useful first learning R remember use feature frequently.\nFigure 2.2: Tab auto-complete\n","code":""},{"path":"intro.html","id":"objects","chapter":"2 Intro to R and RStudio","heading":"2.6 Objects","text":"large part coding involve creating manipulating objects. Objects contain stuff. stuff can numbers, words, result operations analyses. assign content object using <-.Run following code console, change values name age details change new_year holiday date care .see four objects now appear environment pane:name character (text) data. order R recognise character data, must enclosed double quotation marks \" \".age numeric data. order R recognise number, must enclosed quotation marks.today stores result function Sys.Date(). function returns computer system's date. Unlike name age, hard-coded (.e., always return values enter), contents object today change dynamically date. , run function tomorrow, update date tomorrow's date.new_year also date hard-coded specific date. wrapped within .Date() function tells R interpret character string provide date rather text.print contents object, type object's name console press enter. Try printing four objects now.Finally, key concept understand objects can interact can save results interactions new object. Edit run following code create new objects, print contents new object.","code":"\nname <- \"Emily\"\nage <- 37\ntoday <- Sys.Date()\nnew_year <- as.Date(\"2022-12-31\")\ndecade <- age + 10\nfull_name <- paste(name, \"Nordmann\")\nhow_long <- new_year - today"},{"path":"intro.html","id":"help","chapter":"2 Intro to R and RStudio","heading":"2.7 Getting help","text":"feel like need lot help starting learn. really go away; impossible memorise everything. goal learn enough structure R can look things quickly. introduce specialised jargon glossary; easier google \"convert character numeric R\" \"make numbers quotes actual numbers words\". addition function help described , additional resources use often.","code":""},{"path":"intro.html","id":"package-reference-manuals","chapter":"2 Intro to R and RStudio","heading":"2.7.1 Package reference manuals","text":"Start help browser entering help.start() console. Click \"Packages\" \"Reference\" see list packages. Scroll readxl package click see list functions available package.","code":""},{"path":"intro.html","id":"googling","chapter":"2 Intro to R and RStudio","heading":"2.7.2 Googling","text":"function help help, even sure function need, try Googling question. take practice able use right jargon search terms get want. helps put \"R\" \"tidyverse\" search text, name relevant package, like ggplot2.","code":""},{"path":"intro.html","id":"vignettes","chapter":"2 Intro to R and RStudio","heading":"2.7.3 Vignettes","text":"Many packages, especially tidyverse ones, helpful websites vignettes explaining use functions. vignettes also available inside R. can access package's help page vignette() function.","code":"\n# opens a list of available vignettes\nvignette(package = \"ggplot2\")\n\n# opens a specific vignette in the Help pane\nvignette(\"ggplot2-specs\", package = \"ggplot2\")"},{"path":"intro.html","id":"setup-check","chapter":"2 Intro to R and RStudio","heading":"2.8 Set-up check","text":"Restart R session run code. managed install update software packages required, run without issue produce histograms. also produce messages stat_bin() using bins = 30. Pick better value binwidth Warning: Removed 28 rows containing non-finite values (stat_bin). look like errors - explain mean next chapter.get error package called..., install package says .technical issues working machine get code run, please consider using RStudio Cloud.","code":"\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(ggthemes)\n\ndata(starwars)\n\nmass <- ggplot(starwars, aes(x = mass)) +\n  geom_histogram() +\n  theme_economist() +\n  labs(title = \"Mass of Star Wars characters\")\n\nheight <- ggplot(starwars, aes(x = height)) +\n  geom_histogram() +\n  theme_economist() +\n  labs(title = \"Height of Star Wars characters\")\n\nmass + height## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.## Warning: Removed 28 rows containing non-finite values (`stat_bin()`).## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.## Warning: Removed 6 rows containing non-finite values (`stat_bin()`)."},{"path":"intro.html","id":"error-logs","chapter":"2 Intro to R and RStudio","heading":"2.9 Error logs","text":"Coding involves making lot errors. already mentioned SectionÂ 2.7. joking! Getting good R really means getting good spotting typos finding extra missing commas. first learning code, can useful keep error log. feel like slowing serve well long-run. give list common errors fix , also start notice patterns errors get.","code":""},{"path":"intro.html","id":"reading","chapter":"2 Intro to R and RStudio","heading":"2.10 Reading","text":"finished chapter, read 23 Rstudio Tips, Tricks, Shortcuts.","code":""},{"path":"intro.html","id":"glossary-intro","chapter":"2 Intro to R and RStudio","heading":"2.11 Glossary","text":"","code":""},{"path":"intro.html","id":"resources-intro","chapter":"2 Intro to R and RStudio","heading":"2.12 Further Resources","text":"RStudio IDE CheatsheetRStudio Cloud","code":""},{"path":"intro-viz.html","id":"intro-viz","chapter":"3 Intro to data viz","heading":"3 Intro to data viz","text":"","code":""},{"path":"intro-viz.html","id":"ilo-viz","chapter":"3 Intro to data viz","heading":"3.1 Intended Learning Outcomes","text":"end chapter able :Create manage projectsUnderstand grammar ggplotProduce customize range visualizationsThis longest chapter course. got experience RStudio likely progress quite quickly first section deals projects loading data. completely new R, might want plan chapter two sessions","code":""},{"path":"intro-viz.html","id":"reading-1","chapter":"3 Intro to data viz","heading":"3.2 Reading","text":"work chapter, read Principles Effective Data Visualisation.","code":""},{"path":"intro-viz.html","id":"walkthrough-video-2","chapter":"3 Intro to data viz","heading":"3.3 Walkthrough video","text":"encourage read workbook attempt step watching video help consolidate learning.","code":""},{"path":"intro-viz.html","id":"projects","chapter":"3 Intro to data viz","heading":"3.4 Organising a project","text":"write code, first, need get organised. Projects RStudio way group files need one project. projects include scripts, data files, output files like PDF report created script images.folder R look default find save files known working directory. can set working directory manually folder want work menu commands:Session > Set Working Directory > Choose Directory...However, better way organizing files using Projects RStudio. set-new project depends whether working local installation RStudio Cloud.","code":""},{"path":"intro-viz.html","id":"project-start","chapter":"3 Intro to data viz","heading":"3.4.1 Start a Project (local)","text":"create new project local installation:File > New Project...Name project intro--rSave somewhere sensible computer.RStudio restart open new project directory working directory.\nFigure 3.1: Starting new project.\n","code":""},{"path":"intro-viz.html","id":"start-a-project-cloud","chapter":"3 Intro to data viz","heading":"3.4.2 Start a Project (cloud)","text":"working cloud:New project > New RStudio ProjectWait project initialiseName project intro--r clicking name project (default \"Untitled project\") top.\nFigure 3.2: Starting new project cloud.\nlocal cloud project, click Files tab lower right pane see contents project directory. see file called intro--r.Rproj, file contains project information. can double-click open project.Depending settings, may also see directory called .Rproj.user, contains specific user settings. can ignore \"invisible\" files start full stop.","code":""},{"path":"intro-viz.html","id":"rmarkdown","chapter":"3 Intro to data viz","heading":"3.5 R Markdown","text":"course use R Markdown write save code , similar Jupyter notebooks workbench uses. time cover many features R Markdown incredibly powerful format allows create fully reproducible reports text, code, analysis contained within one document. can also use create websites, online books (like one), presentations, Shiny apps. like learn R Markdown, links additional resources SectionÂ 3.12.","code":""},{"path":"intro-viz.html","id":"new-document","chapter":"3 Intro to data viz","heading":"3.5.1 New document","text":"open new R Markdown document click:File > New File > R MarkdownYou prompted give title; call document Intro data viz. can also change author name. Keep output format HTML.opened new document sure save clicking File > Save .... Name file something sensible like chapter_3 (Mac can see file extension, name chapter_3.Rmd). file automatically saved project folder, .e., working directory, now see file appear file viewer pane.first open new R Markdown document see bunch welcome text looks like :\nFigure 3.3: New R Markdown text\nClick knit see template looks like rendered, , following steps:Delete everything setup chunkSkip line setup chunk type \"## Loading packges\" (hashes without quotation marks); make sure spaces hashes least one space hashes subtitleSkip line click insert new code menu (green box C plus sign) R","code":""},{"path":"intro-viz.html","id":"code-chunks","chapter":"3 Intro to data viz","heading":"3.5.2 Code chunks","text":"created subtitle code chunk. R Markdown, anything written grey code chunk assumed code, anything written white space (code chunks) regarded normal text (actual colours depend theme applied, refer default white grey). makes easy combine text code one document.create new code chunk notice grey box starts ends three back ticks ```. One common mistake accidentally delete back ticks. Remember, code chunks text entry different colours - colour certain parts Markdown look right, check deleted back ticks.code chunk, write code load packages installed Section 2.5","code":"\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(medicaldata)\nlibrary(gapminder)"},{"path":"intro-viz.html","id":"running-code","chapter":"3 Intro to data viz","heading":"3.5.3 Running code","text":"working R Markdown document, several ways run lines code.First, can highlight code want run click Run -> Run Selected Line(s), however tedious can cause problems highlight exactly code want run. common method running code see beginners, aim make life easier thisFirst, can highlight code want run click Run -> Run Selected Line(s), however tedious can cause problems highlight exactly code want run. common method running code see beginners, aim make life easier thisAlternatively, can press green \"play\" button top-right code chunk run lines code chunk.Alternatively, can press green \"play\" button top-right code chunk run lines code chunk.Even better learn keyboard short cuts R Studio. run single line code, make sure cursor line code want run (can anywhere) press ctrl + enter Cmd + enter Mac. want run code code chunk, press ctrl/cmd + shift + enter. Learn short cuts, make life easier!Even better learn keyboard short cuts R Studio. run single line code, make sure cursor line code want run (can anywhere) press ctrl + enter Cmd + enter Mac. want run code code chunk, press ctrl/cmd + shift + enter. Learn short cuts, make life easier!Run code using method 3. see packages load console.","code":""},{"path":"intro-viz.html","id":"loading-data","chapter":"3 Intro to data viz","heading":"3.6 Loading data","text":"using Us Researcher Workbench, load data Researcher Workbench useful know import data R generally. Broadly speaking three types data can load working R:Built-data sets come packages install useful reproducible demos. Common ones see Google help documentation mtcars diamonds using datasets medicaldata package built specifically teaching data skills health researchers.Data sets stored online accessed via URL.Data sets stored locally computer.start 1 move 2 3 soon.","code":""},{"path":"intro-viz.html","id":"built-in-data","chapter":"3 Intro to data viz","heading":"3.6.1 Built-in data","text":"data() function lists data sets available.Type name data set console see data. example, type ?covid_testing console see dataset description covid_testing, data set included medicaldata.can also use data() function load dataset global environment.can now use data. Insert new heading (##) named \"first plot\". underneath , create new code chunk, copy, paste, run code. may understand yet, end session.","code":"\n# list datasets built in to base R and all installed packages\ndata()\n\n# lists datasets in a specific package\ndata(package = \"medicaldata\")\n?covid_testing                \n# loads covid testing data into the environment\ndata(\"covid_testing\")\nggplot(covid_testing, aes(x = pan_day)) +\n  geom_histogram(colour = \"black\") +\n  theme_economist() +\n  labs(title = \"COVID-19 cases\",\n       y = \"Number of cases\", x = \"Day after pandemic\")"},{"path":"intro-viz.html","id":"loading-online","chapter":"3 Intro to data viz","heading":"3.6.2 Online sources","text":"Now, try loading data stored online. Create code chunk document copy, paste, run code. code loads gapminder dataset contained gapminder package, except saved .csv file uploaded GitHub purposes exercise. dataset contains excerpt Gapminder data life expectancy, GDP per capita, population country 1952 2007.data stored .csv file going use read_csv() function load .Note url contained within double quotation marks - work without .get error message looks like:Error read_csv(\"https://raw.githubusercontent.com/emilynordmann/AllOfUs-intro--r/main/book/data/gapminder.csv\") :\nfind function \"read_csv\"means loaded tidyverse. Check library(tidyverse) setup chunk run setup chunk.Create another heading (##) named \"second plot\", another code chunk , copy, paste, run code .","code":"\n# read in data\ngapminder <- read_csv(\"https://raw.githubusercontent.com/emilynordmann/AllOfUs-intro-to-r/main/book/data/gapminder.csv\")\nggplot(gapminder, aes(x = continent, y = lifeExp)) +\n  geom_boxplot() +\n  theme_excel() +\n  labs(y = \"Life Expectancy\",\n       title = \"Life Expectancy by Continent\",\n       subtitle = \"1952 - 2007\",\n       x = NULL) +\n  theme(legend.position = \"bottom\")"},{"path":"intro-viz.html","id":"rmd-knit","chapter":"3 Intro to data viz","heading":"3.7 Knitting your file","text":"move focus visualisation, going knit, compile, file document type choosing. knit file click:Knit > Knit HMTLR Markdown create display new HTML document, also automatically save file working directory.can also knit typing following code console. Never put Rmd script , try knit infinite loop.time cover customise knitted output course, suffice say can control almost every aspect, whether code displayed hidden, size placement figures.work course, encourage use Markdown document take notes code output create complete single record work done. particular, use headings new code chunks separate tasks, () experience error, make note fixed .Ok, get started properly.","code":"\nrmarkdown::render(\"chapter_3.Rmd\")\n\n# alternatively, you can use this, but may get a warning\nknitr::knit2html(\"chapter_3.Rmd\")"},{"path":"intro-viz.html","id":"building-plots","chapter":"3 Intro to data viz","heading":"3.8 Building plots","text":"multiple approaches data visualization R; course use popular package ggplot2, part larger tidyverse collection packages. grammar graphics (\"gg\" \"ggplot\") standardised way describe components graphic. ggplot2 uses layered grammar graphics, plots built series layers. may helpful think picture multiple elements sit semi-transparently . good analogy old animated movies artists create background add moveable elements top background via transparencies.FigureÂ 3.4 displays evolution simple scatterplot using layered approach. First, plot space built (layer 1); variables specified (layer 2); type visualisation (known geom) desired variables specified (layer 3) - case geom_point() called visualise individual data points; second geom added include line best fit (layer 4), axis labels edited readability (layer 5), finally, theme applied change overall appearance plot (layer 6).\nFigure 3.4: Evolution layered plot\nImportantly, layer independent independently customizable. example, size, color position component can adjusted, one , example, remove first geom (data points) visualize line best fit, simply removing layer draws data points (FigureÂ 3.5). use layers makes easy build complex plots step--step, adapt extend plots existing code.\nFigure 3.5: Final plot scatterplot layer removed.\n","code":""},{"path":"intro-viz.html","id":"plot-setup","chapter":"3 Intro to data viz","heading":"3.9 Plot setup","text":"","code":""},{"path":"intro-viz.html","id":"plot-setup-data","chapter":"3 Intro to data viz","heading":"3.9.1 Data","text":"Every plot starts ggplot() function data table. data loaded typo code, give error message. best check plot step, can figure errors easily.\nFigure 3.6: blank ggplot.\n","code":"\nggplot(data = gapminder)"},{"path":"intro-viz.html","id":"mapping","chapter":"3 Intro to data viz","heading":"3.9.2 Mapping","text":"next argument ggplot() mapping. tells plot columns data represented , \"mapped\" , different aspects plot, x-axis, y-axis, line colour, object fill, line style. aspects, \"aesthetics\", listing inside aes() function.Set arguments x y names columns want plotted axes. , want plot wait time x-axis call time y-axis.\nFigure 3.7: blank plot x- y- axes mapped.\nexample , wrote names arguments data mapping, practice, almost everyone omits . Just make sure put data mapping right order.","code":"\n# set up the plot with mapping\nggplot(\n  data = gapminder, \n  mapping = aes(x = lifeExp, y = gdpPercap)\n)\nggplot(gapminder,  aes(lifeExp, gdpPercap))"},{"path":"intro-viz.html","id":"geoms","chapter":"3 Intro to data viz","heading":"3.9.3 Geoms","text":"Now can add plot elements layers. referred geoms functions start geom_. add layers onto base plot created ggplot() plus (+).\nFigure 3.8: Adding scatterplot geom_point().\nSomewhat annoyingly, plus end previous line, start next line. make mistake, run first line code produce base layer get following error message rather adding geom_point().","code":"\nggplot(gapminder, aes(x = lifeExp, y = gdpPercap)) +\n  geom_point() # scatterplot\nggplot(gapminder, aes(x = lifeExp, y = gdpPercap)) \n+ geom_point() # scatterplot## Error:\n## ! Cannot use `+` with a single argument\n## â„¹ Did you accidentally put `+` on a new line?"},{"path":"intro-viz.html","id":"multiple-geoms","chapter":"3 Intro to data viz","heading":"3.9.4 Multiple geoms","text":"Part power ggplot2 can add one geom plot adding extra layers quickly becomes possible make complex informative visualisations. Importantly, layers display order set . code uses geoms produce scatterplot line best fit orders differently.\nFigure 3.9: Points first versus line first.\n","code":"\n# Points first\nggplot(gapminder, aes(x = lifeExp, y = gdpPercap)) +\n  geom_point() + # scatterplot\n  geom_smooth(method = \"loess\") # line of best fit\n\n# Line first\nggplot(gapminder, aes(x = lifeExp, y = gdpPercap)) +\n  geom_smooth(method = \"loess\") + # line of best fit\n  geom_point() # scatterplot"},{"path":"intro-viz.html","id":"saving-plots","chapter":"3 Intro to data viz","heading":"3.9.5 Saving plots","text":"Just like can save numbers data tables objects, can also save output ggplot(). code produces plots created saves objects named point_first line_first. run code, plots display like done . Instead, see object names appear environment pane.view plots, call objects name. output plot separately.","code":"\npoint_first <- \nggplot(gapminder, aes(x = lifeExp, y = gdpPercap)) +\n  geom_point() + # scatterplot\n  geom_smooth(method = \"loess\") # line of best fit\n  \nline_first <-\nggplot(gapminder, aes(x = lifeExp, y = gdpPercap)) +\n  geom_smooth(method = \"loess\") + # line of best fit\n  geom_point() # scatterplot\npoint_first # view first plot\nline_first # view second plot"},{"path":"intro-viz.html","id":"combining-plots","chapter":"3 Intro to data viz","heading":"3.9.6 Combining plots","text":"One reasons save plots objects can combine multiple plots using functions patchwork package. code produces plot combining two plots + specifying want plots produced single row nrow argument plot_layout().\nFigure 3.10: Combining plots patchwork.\n","code":"\n# add plots together in 1 row; try changing nrow to 2\npoint_first + line_first + plot_layout(nrow = 1)"},{"path":"intro-viz.html","id":"saving-plots-to-disk","chapter":"3 Intro to data viz","heading":"3.9.7 Saving plots to disk","text":"Another reason save plots object can save disk using ggsave(). filename argument specifies name file save - must file extension although can choose image format (e.g., .png, .jpeg). resulting file save project directory. many options ggsave() allow specify height, width, resolution image save.","code":"\nggsave(filename = \"my_plot.png\", plot = point_first)"},{"path":"intro-viz.html","id":"customising-plots","chapter":"3 Intro to data viz","heading":"3.10 Customising plots","text":"","code":""},{"path":"intro-viz.html","id":"format-axes","chapter":"3 Intro to data viz","heading":"3.10.1 Format axes","text":"Now need make axes look neater. several functions can use change axis labels, powerful ones scale_ functions. need use scale function matches data plotting axis becomes particularly important know type data working . axes continuous, use scale_x_continuous() scale_y_continuous().name argument changes axis label. breaks argument sets major units needs vector possible values, can extend beyond range data (e.g., wait time goes 350, can specify breaks 600 case wanted reuse code new data different values). seq() function creates sequence numbers one another specified steps.\nFigure 3.11: Formatting plot axes scale_ functions.\nCheck help ?scale_x_continuous see set minor units specify many breaks want instead.","code":"\nggplot(gapminder, aes(x = lifeExp, y = gdpPercap)) +\n  geom_point() + \n  geom_smooth(method = \"loess\") + \n  scale_x_continuous(name = \"Life Expectancy\", \n                     breaks = seq(from = 0, to = 100, by = 10)) +\n  scale_y_continuous(name = \"GDP per capita\",\n                     breaks = seq(from = 0, to = 125000, by = 25000))## `geom_smooth()` using formula = 'y ~ x'"},{"path":"intro-viz.html","id":"axis-limits","chapter":"3 Intro to data viz","heading":"3.10.2 Axis limits","text":"want change minimum maximum values axis, use coord_cartesian() function. Many plots make sense minimum maximum values represent range possible values, even values present data. , life expectancy GDP less 0, set minimum values 0 maximum values first break highest value.\nFigure 3.12: Changing axis limits.\ncan also set limits argument inside scale_ functions, actually removes data falls outside limits, rather cropping plot, can change appearance certain types plots like violin plots density plots.","code":"\nggplot(gapminder, aes(x = lifeExp, y = gdpPercap)) +\n  geom_point() + \n  geom_smooth(method = \"loess\") + \n  scale_x_continuous(name = \"Life Expectancy\", \n                     breaks = seq(from = 0, to = 100, by = 10)) +\n  scale_y_continuous(name = \"GDP per capita\",\n                     breaks = seq(from = 0, to = 125000, by = 25000)) +\n  coord_cartesian(xlim = c(0, 100), \n                  ylim = c(0, 120000))## `geom_smooth()` using formula = 'y ~ x'"},{"path":"intro-viz.html","id":"themes","chapter":"3 Intro to data viz","heading":"3.10.3 Themes","text":"ggplot2 comes several built-themes, theme_minimal() theme_bw(), ggthemes package provides even themes match different software, GoogleDocs Stata, publications, Economist Wall Street Journal. add GoogleDocs theme, change font size 18 base_size argument.also worth highlighting code starting look quite complicated number layers, built slowly (hopefully!) make sense. see examples ggplot2 code online like adapt, build plot layer layer make easier understand layer adds.\nFigure 3.13: Changing theme.\n","code":"\nggplot(gapminder, aes(x = lifeExp, y = gdpPercap)) +\n  geom_point() + \n  geom_smooth(method = \"loess\") + \n  scale_x_continuous(name = \"Life Expectancy\", \n                     breaks = seq(from = 0, to = 100, by = 10)) +\n  scale_y_continuous(name = \"GDP per capita\",\n                     breaks = seq(from = 0, to = 125000, by = 25000)) +\n  coord_cartesian(xlim = c(0, 100), \n                  ylim = c(0, 120000))+\n  ggthemes::theme_gdocs(base_size = 16)## `geom_smooth()` using formula = 'y ~ x'"},{"path":"intro-viz.html","id":"appropriate-plots","chapter":"3 Intro to data viz","heading":"3.11 Appropriate plots","text":"Now know build plot layers customize appearance, ready learn plot types. Different types data require different types plots, section organised data type.ggplot2 cheat sheet great resource help find plots appropriate data, based many variables plotting type . examples use customer satisfaction data, plot communicates something different.expect memorize plot types methods customizing , helpful try code examples , changing values test understanding.","code":""},{"path":"intro-viz.html","id":"counting-categories","chapter":"3 Intro to data viz","heading":"3.11.1 Counting categories","text":"","code":""},{"path":"intro-viz.html","id":"bar-plot","chapter":"3 Intro to data viz","heading":"3.11.1.1 Bar plot","text":"want count number things per category, can use geom_bar(). need provide x mapping geom_bar() default geom_bar() uses number observations group x value y, need tell put y-axis.","code":"\nggplot(covid_testing, aes(x = result)) +\n  geom_bar()"},{"path":"intro-viz.html","id":"one-continuous-variable","chapter":"3 Intro to data viz","heading":"3.11.2 One continuous variable","text":"continuous variable, like number seconds callers wait, can use geom_histogram() geom_density() show distribution. Just like geom_bar() required specify x variable.","code":""},{"path":"intro-viz.html","id":"histogram","chapter":"3 Intro to data viz","heading":"3.11.2.1 Histogram","text":"histogram splits data \"bins\" along x-axis shows count many observations bin along y-axis (covid testing data children's hospital).\nFigure 3.14: Histogram wait times.\nalways set binwidth number bins something meaningful data (otherwise get annoying message). might need try options find something looks good conveys meaning plot -- try changing values binwidth bins see works best.default, bars start centered 0, binwidth set 20, first bar include -10 10 years old, make much sense. can set boundary = 0 bar represents increments 20 years starting 0.Finally, default style grey bars ugly, can change setting fill colour, well using scale_x_continuous() update axis labels.\nFigure 3.15: Histogram custom styles.\n","code":"\nggplot(covid_testing, aes(x = age)) +\n  geom_histogram()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n# adjust width of each bar\nggplot(covid_testing, aes(x = age)) +\n  geom_histogram(binwidth = 20)\n\n# adjust number of bars\nggplot(covid_testing, aes(x = age)) +\n  geom_histogram(bins = 50)\nggplot(covid_testing, aes(x = age)) +\n  geom_histogram(binwidth = 20, boundary = 0)\nggplot(covid_testing, aes(x = age)) +\n  geom_histogram(binwidth = 20, \n                 boundary = 0, \n                 fill = \"white\", \n                 color = \"black\") +\n  scale_x_continuous(name = \"Subject age at covid test\",\n                     breaks = seq(0, 150, 20))"},{"path":"intro-viz.html","id":"frequency-plot","chapter":"3 Intro to data viz","heading":"3.11.2.2 Frequency plot","text":"Rather plotting bin bar, can connect line across top bin using frequency plot. function geom_freqpoly() works geom_histogram(), except take fill argument just line.","code":"\nggplot(covid_testing, aes(x = age)) +\n  scale_x_continuous(name = \"Subject age at covid test\",\n                     breaks = seq(0, 150, 20)) +\n  geom_freqpoly(boundary = 0, binwidth = 20, \n                color = \"black\")"},{"path":"intro-viz.html","id":"density-plot","chapter":"3 Intro to data viz","heading":"3.11.2.3 Density plot","text":"distribution smooth, density plot often better way show distribution. density plot need binwidth boundary arguments split data bins, can fill.","code":"\nggplot(covid_testing, aes(x = age)) +\n  scale_x_continuous(name = \"Subject age at covid test\",\n                     breaks = seq(0, 150, 20)) +\n  geom_density(fill = \"purple\", color = \"black\")"},{"path":"intro-viz.html","id":"grouped-continuous-variables","chapter":"3 Intro to data viz","heading":"3.11.3 Grouped continuous variables","text":"several ways compare continuous data across groups. choose depends point trying make plot.","code":""},{"path":"intro-viz.html","id":"subdividing-distributions","chapter":"3 Intro to data viz","heading":"3.11.3.1 Subdividing distributions","text":"previous plots, used fill purely visual reasons, e.g., changed colour histogram bars make look nicer. However, can also use fill represent another variable colours become meaningful.Setting fill aesthetic mapping produce different coloured bars category fill variable, case issue_category.\nFigure 3.16: Histogram categories represented fill.\ndefault, categories positioned stacked top . function geom_area() gives similar effect stat = \"bin\".\nFigure 3.17: Stacked area plot.\n","code":"\nggplot(gapminder, aes(x = lifeExp, fill = continent)) +\n  geom_histogram(boundary = 0, \n                 binwidth = 1,\n                 color = \"black\")\n# area plot\nggplot(gapminder, aes(x = lifeExp, fill = continent)) +\n  geom_area(stat = \"bin\", \n            boundary = 0, \n            binwidth = 15, \n            color = \"black\")"},{"path":"intro-viz.html","id":"comparing-distributions","chapter":"3 Intro to data viz","heading":"3.11.3.2 Comparing distributions","text":"want compare one distribution, can set position argument geom_histogram() \"dodge\" put bars group next instead stacking . However, can look confusing several categories. Instead, usegeom_freqpoly() plot line connecting top bin.\nFigure 3.18: Different ways plot distribution continuous variable multiple groups.\n","code":"\n# dodged histogram\nhistogram_dodge <- \nggplot(gapminder, aes(x = lifeExp, fill = continent)) +\n  geom_histogram(boundary = 0, \n                 binwidth = 20,\n                 color = \"black\",\n                 position = \"dodge\")+\n  ggtitle(\"Dodged Histogram\")\n\n# frequency plot\nfreqpoly_plot <- \nggplot(gapminder, aes(x = lifeExp, colour = continent)) +\n  geom_freqpoly(binwidth = 20, \n                boundary = 0,\n                size = 2) +\n  scale_x_continuous(name = \"Life Expecancy\",\n                     breaks = seq(0, 100, 20)) +\n  ggtitle(\"Frequency\")## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n## â„¹ Please use `linewidth` instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated.\n# put plots together\nhistogram_dodge + freqpoly_plot + \n  plot_layout(nrow = 1, guides = \"collect\") # collects the legends together, try removing this"},{"path":"intro-viz.html","id":"violin-plot","chapter":"3 Intro to data viz","heading":"3.11.3.3 Violin plot","text":"Another way compare groups continuous variables violin plot. like density plot, rotated 90 degrees mirrored - fatter violin, larger proportion data points value.\nFigure 3.19: Violin-plot.\n","code":"\nggplot(gapminder, aes(x = continent, y = lifeExp)) +\n  geom_violin()"},{"path":"intro-viz.html","id":"boxplot","chapter":"3 Intro to data viz","heading":"3.11.3.4 Boxplot","text":"Boxplots serve similar purpose violin plots. show shape distribution, rather statistics . middle line represents median; half data line half . box encloses 25th 75th percentiles data, 50% data falls inside box. \"whiskers\" extending box extend 1.5 times height box, although can change coef argument. points show outliers -- individual data points fall outside range.\nFigure 3.20: Basic boxplot.\n","code":"\nggplot(gapminder, aes(x = continent, y = lifeExp)) +\n geom_boxplot()"},{"path":"intro-viz.html","id":"combo-plots","chapter":"3 Intro to data viz","heading":"3.11.3.5 Combo plots","text":"Violin plots frequently layered geoms represent mean median values data. lot code, help understanding ) run layer layer see builds b) change values throughout code\nFigure 3.21: Violin plots combined different methods represent means medians.\n","code":"\n# add fill and colour to the mapping\n\nggplot(gapminder, aes(x = continent, y = lifeExp,\n                      fill = continent,\n                      colour = continent)) +\n  scale_x_discrete(name = \"Continent\") +\n  scale_y_continuous(name = \"Life Expectancy\",\n                     breaks = seq(0, 100, 10)) +\n  coord_cartesian(ylim = c(0, 100)) +\n  guides(fill = \"none\", colour = \"none\") + \n  # add a line at median (50%) score\n  geom_violin(alpha = 0.4, \n              draw_quantiles = 0.5) + \n  # add a boxplot\n  geom_boxplot(width = 0.25, \n               fill = \"white\", \n               alpha = 0.75) + \n  # add a point that represents the mean\n  stat_summary(fun = mean, \n               geom = \"point\", \n               size = 2) + \n  ggtitle(\"ViolinBox\")"},{"path":"intro-viz.html","id":"two-continuous-variables","chapter":"3 Intro to data viz","heading":"3.11.4 Two continuous variables","text":"want see two continuous variables related, set one x-axis y-axis. Usually, one variable causes , plot cause x-axis effect y-axis. , want see longer wait times cause calls longer.","code":""},{"path":"intro-viz.html","id":"scatterplot","chapter":"3 Intro to data viz","heading":"3.11.4.1 Scatterplot","text":"function create scatterplot called geom_point().\nFigure 3.22: Scatterplot geom_point().\n","code":"\nggplot(gapminder, aes(x = lifeExp, y = gdpPercap)) +\n  geom_point()"},{"path":"intro-viz.html","id":"trendlines","chapter":"3 Intro to data viz","heading":"3.11.4.2 Trendlines","text":"FigureÂ 3.4, emphasised relationship trendline created geom_smooth() using argument method = lm (\"lm\" stands \"linear model\" straight line relationship). can also set method = loess visualise non-linear relationship.\nFigure 3.23: Different ways show relationship two continuous variables.\nmuch data extremes x-axis, curve can uncertain. represented wider shaded area, means true relationship might anywhere within area. Add argument se = FALSE geom_smooth() remove \"standard error\" shading.","code":"\nlm_plot <- \n  ggplot(gapminder, aes(x = lifeExp, y = gdpPercap)) +\n  geom_point(alpha = 0.2) +\n  geom_smooth(method = lm) +\n  ggtitle(\"method = lm\")\n\nloess_plot <- \n  ggplot(gapminder, aes(x = lifeExp, y = gdpPercap)) +\n  geom_point(alpha = 0.2) +\n  geom_smooth(method = loess) +\n  ggtitle(\"method = loess\")\n\nlm_plot + loess_plot## `geom_smooth()` using formula = 'y ~ x'\n## `geom_smooth()` using formula = 'y ~ x'"},{"path":"intro-viz.html","id":"overplotting","chapter":"3 Intro to data viz","heading":"3.11.5 Overplotting","text":"limited range numeric values, ordinal rating scale categorical variables, sometimes overlapping data makes difficult see going point plot. example, plot shows test result age, makes hard see exactly many data points point.section, explore options dealing .\nFigure 3.24: Overlapping data.\n","code":"\nggplot(covid_testing, aes(x = result, y = age)) + \n  geom_point()"},{"path":"intro-viz.html","id":"jitter-plot","chapter":"3 Intro to data viz","heading":"3.11.5.1 Jitter plot","text":"can use geom_jitter() move points around bit make easier see. can also set alpha transparency. , x-axis continuous, need jitter width, y-axis ordinal categories, height jittered -0.2 +0.2 away true y-value. can help play around values understand jitter .\nFigure 3.25: Jitter plot.\n","code":"\nggplot(covid_testing, aes(x = result, y = age)) + \n  geom_jitter(width = 0.2, height = 0, alpha = 0.4)"},{"path":"intro-viz.html","id":"facets","chapter":"3 Intro to data viz","heading":"3.11.5.2 Facets","text":"Alternatively, can use facet_wrap() create separate plot test result facet_wrap() uses tilde (~) symbol, can roughly translate \"\", e.g., facet plot test result. labeller function controls labels plot. label_both specifies want variable name (result) value (e.g., invalid) printed plot make easier read.\nFigure 3.26: histogram facets.\n, means, plot types can make R. chapter just gave basic overview. resources section end chapter lists many resources, R Graph Gallery especially useful one get inspiration kinds beautiful plots can make R.","code":"\nggplot(covid_testing, aes(x = age)) +\n  geom_histogram(binwidth = 10, \n                 boundary = 0, \n                 fill = \"dodgerblue\", \n                 color = \"black\") +\n  facet_wrap(~result, \n             ncol = 1, # try changing this to 2 \n             labeller = label_both, scales = \"free_y\") +\n  scale_x_continuous(name = \"Subject age at test\",\n                     breaks = seq(0, 600, 30))"},{"path":"intro-viz.html","id":"resources-viz","chapter":"3 Intro to data viz","heading":"3.12 Further Resources","text":"R Markdown Cheat Sheetggplot2 cheat sheet. R Markdown: Definitive Guide Yihui Xie, J. J. Allaire, & Garrett GrolemundChapter 27: R Markdown R Data ScienceFundamentals Data VisualizationData visualization: practical introductionBBC Visual Data Journalism cookbook R graphics","code":""},{"path":"intro-viz.html","id":"glossary-day1","chapter":"3 Intro to data viz","heading":"3.13 Glossary","text":"","code":""},{"path":"live-office-hour-1.html","id":"live-office-hour-1","chapter":"4 Live Office Hour 1","heading":"4 Live Office Hour 1","text":"","code":""},{"path":"live-office-hour-1.html","id":"schedule-and-zoom-link","chapter":"4 Live Office Hour 1","heading":"4.1 Schedule and Zoom link","text":"first live office hour session take place hours 4-5pm ET September 20 via Zoom.password 3412 waiting room enabled. Please ensure Zoom name set name used register Us Researcher Academy otherwise may allowed entry session.","code":""},{"path":"live-office-hour-1.html","id":"content","chapter":"4 Live Office Hour 1","heading":"4.2 Content","text":"Live office hours primarily opportunity ask questions instructors, get support problems , request additional information aspect course far.Emily lead Q&session material covered workbook Week 1Javan lead Q&session skills learned transfer Us Researcher Workbench.","code":""},{"path":"live-office-hour-1.html","id":"pre-requisites","chapter":"4 Live Office Hour 1","heading":"4.3 Pre-requisites","text":"joining office hour, please ensure worked material Week 1 - consult Progress Tracker(0.2 sure need .can ask questions day, can also complete Q&form advance let instructors know like session focus .","code":""},{"path":"session-2-1.html","id":"session-2-1","chapter":"5 Data Summaries","heading":"5 Data Summaries","text":"","code":""},{"path":"session-2-1.html","id":"ilo-summaries","chapter":"5 Data Summaries","heading":"5.1 Intended Learning Outcomes","text":"end chapter able :Calculate descriptive statistics range data typesManage missing values","code":""},{"path":"session-2-1.html","id":"reading-2","chapter":"5 Data Summaries","heading":"5.2 Reading","text":"work chapter, read Data Organization Spreadsheets.","code":""},{"path":"session-2-1.html","id":"walkthrough-video-3","chapter":"5 Data Summaries","heading":"5.3 Walkthrough video","text":"encourage read workbook attempt step watching video help consolidate learning.","code":""},{"path":"session-2-1.html","id":"set-up","chapter":"5 Data Summaries","heading":"5.4 Set-up","text":"Open course project following:Create save new R Markdown document named chapter_5.Rmd get rid default template text line 11 onwards.Add code set-chunk run code load packages data.chapter, going use opt dataset medicaldata package contains data RCT looking whether treatment maternal periodontal disease can reduce risk preterm birth low birth weight. lot variables dataset, use ?opt find mean.","code":"\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(psych)\nlibrary(medicaldata)\ndata(\"opt\")"},{"path":"session-2-1.html","id":"counting-groups","chapter":"5 Data Summaries","heading":"5.5 Counting groups","text":"categorical variables, descriptive statistic can calculate count. code uses %>% operator can read :Start dataset opt ;Start dataset opt ;Group variable Black ;Group variable Black ;Count number observations group ;Count number observations group ;Remove groupingRemove groupinggroup_by() result surface level changes dataset, rather, changes underlying structure groups specified, whatever functions called next performed separately level grouping variable. grouping remains object created important remove ungroup() avoid future operations object unknowingly performed groups.code therefore counts number observations group variable Black. just need total number observations, remove group_by() ungroup() lines, perform operation whole dataset, rather groups:","code":"\nopt %>%\n  group_by(Black) %>%\n  count() %>%\n  ungroup()\nopt %>%\n  count()"},{"path":"session-2-1.html","id":"summarise","chapter":"5 Data Summaries","heading":"5.6 Summarise","text":"numeric data, can use increased range functions. example, may wish calculate mean age (SD) sample can using function summarise() dplyr tidyverse package.code produces summary data form column named mean_age contains result calculating mean variable age. creates sd_age standard deviation. Finally, uses function n() add number values used calculate statistic column named n_values - useful sanity check whenever make summary statistics.Note code save result operation, simply output result console. wish save future use, can store object using <- notation print later typing object name.Finally, group_by() function work way calculating summary statistics -- output function called group_by() produced level grouping variable.","code":"\nopt %>%\n  summarise(mean_age = mean(Age),\n            sd_age = sd(Age),\n            n_values = n())\nage_stats <- opt %>%\n  summarise(mean_age = mean(Age),\n            sd_age = sd(Age),\n            n_values = n())\nopt %>%\n  group_by(Black) %>%\n  summarise(mean_age = mean(Age),\n            sd_age = sd(Age),\n            n_values = n()) %>%\n  ungroup()"},{"path":"session-2-1.html","id":"pipes-first","chapter":"5 Data Summaries","heading":"5.7 Pipes","text":"go , take quick detour formally introduce pipe. Pipes allow send output one function straight another function. Specifically, send result function %>% first argument function %>%. can useful translate pipe \"\". easier show tell, look example.Notice summarise() longer needs first argument data table, pulled pipe. power pipe may obvious now, soon prove worth.","code":"\n# without pipe\nsummarise(opt,\n          mean_bmi = mean(BMI), \n          median_bmi = median(BMI))\n\n# with pipe\nopt %>%\n  summarise(mean_bmi = mean(BMI), \n          median_bmi = median(BMI))"},{"path":"session-2-1.html","id":"alternatives","chapter":"5 Data Summaries","heading":"5.8 Alternatives","text":"method used pure tidyverse. good thing approach output creates easy work can used range different functions (example, can calculate table descriptives use data set ggplot). However, lots alternatives useful know ) see try Google help b) easier additional functionality.","code":""},{"path":"session-2-1.html","id":"base-r","chapter":"5 Data Summaries","heading":"5.8.1 Base R","text":"Rather embedding functions within summarise() can call summary functions straight Base R. also clear $ notation . dollar sign allows select items object, columns table. left-hand side object, right-hand side item. code, calculating mean Age column present data set opt.Base R also contains function summary() print summary variables dataset (actually many variables dataset omit ignore now). summary() useful getting quick overview dataset check potential problems, e.g., minimum maximum values look right? variable missing data (NAs)?","code":"\nmean(opt$Age)\nmedian(opt$Age)## [1] 25.97813\n## [1] 25\nsummary(opt)"},{"path":"session-2-1.html","id":"psychdescribe","chapter":"5 Data Summaries","heading":"5.8.2 psych::describe()","text":"function describe() psych incredibly useful quickly produces range descriptive statistics, including standard error otherwise faff compute R base function standard error like e.g., sd().default, describe() computes stats variables data set probably need case dataset, produce monstrously long output. Instead, can use select() tidyverse select columns want describe pass describe(). may also want drop columns default describe() table can select() - hopefully power %>% begins obvious.Finally, describe() tidyverse, use group_by() however, also grouped version, describeBy().object creates different created far. Rather single data frame tibble, creates list. Lists can contain multiple objects, datasets, data types mean little bit harder work need use $ notation pull specific objects list can manipulate . tab autocomplete function can useful help get name object exactly right.want get rid row contains Group (descriptives informative) vars column (, hugely helpful), requires little bit extra wrangling. Using %>% pipe, pass table filter() ask return rows vars (!=) equal 1 use select() drop (-) column vars.","code":"\ndescribe_table <- opt %>%\n  select(Age, BMI)%>%\n  describe() %>%\n  select(-vars)\ndescribebytable <- opt %>%\n  select(Group, Age, BMI) %>%\n  describeBy(group = .$Group) \n\ndescribebytable## \n##  Descriptive statistics by group \n## group: C\n##        vars   n  mean   sd median trimmed  mad min max range skew kurtosis   se\n## Group*    1 410  1.00 0.00      1    1.00 0.00   1   1     0  NaN      NaN 0.00\n## Age       2 410 25.86 5.51     25   25.48 5.93  16  44    28 0.61    -0.27 0.27\n## BMI       3 375 27.45 6.88     26   26.78 5.93  16  62    46 1.16     2.16 0.36\n## ------------------------------------------------------------ \n## group: T\n##        vars   n  mean   sd median trimmed  mad min max range skew kurtosis   se\n## Group*    1 413  2.00 0.00      2    2.00 0.00   2   2     0  NaN      NaN 0.00\n## Age       2 413 26.09 5.62     25   25.73 5.93  16  44    28 0.58    -0.25 0.28\n## BMI       3 375 27.89 7.37     26   26.94 5.93  15  68    53 1.72     4.67 0.38\ndescribebytable$C\ndescribebytable$`C` %>%\n  filter(vars != 1) %>%\n  select(-vars)"},{"path":"session-2-1.html","id":"ordinal-data","chapter":"5 Data Summaries","heading":"5.9 Ordinal data","text":"Sometimes data represented numbers, really ordinal data. opt data contains data relating Apgar score, help documentation Google tells summary newborn infant's 'Appearance, Pulse, Grimace, Activity, Respiration' 1 minute. trait, score 0, 1, 2 assigned. example:Grimace response reflex irritability term describing response stimulation, mild pinch:reaction, infant scores 0 reflex irritability.grimacing, infant scores 1 reflex irritability.grimacing cough, sneeze, vigorous cry, infant scores 2 reflex irritability.scores traits added :Less equal 3: Critically low4-6: Fairly lowgreater equal 7: NormalSo whilst looks like number, really sure difference score 0 1 difference 1 2. currently, R know , far R concerned, looks like number walks like number smells like number, going treat number.medical researchers anything like psychologists, ignore fact Apgar score ordinal, treat like real number, calculate full range descriptive statistics use parametric statistical tests. However, really right.Instead, can convert variable factor, category using function mutate() tidyverse package dplyr.Note save result operation dataset name, overwrite original object. example, chosen create new variables factored data also chosen overwrite original Apgar1 Apgar5 variables providing existing names left-hand side. Think carefully whether want overwrite existing variables create new ones.Now variables categories, summary() provides counts rather means etc:can also use ggplot() plot number babies score:use factor new grouping variable:","code":"\nopt %>%\n  select(Apgar1, Apgar5) %>%\n  describe()\nopt %>%\n  select(Apgar1, Apgar5) %>%\n  summary()##      Apgar1          Apgar5      \n##  Min.   : 0.00   Min.   : 0.000  \n##  1st Qu.: 8.00   1st Qu.: 9.000  \n##  Median : 9.00   Median : 9.000  \n##  Mean   : 8.17   Mean   : 8.825  \n##  3rd Qu.: 9.00   3rd Qu.: 9.000  \n##  Max.   :10.00   Max.   :10.000  \n##  NA's   :41      NA's   :41\nopt <- opt %>%\n  mutate(Apgar1_factor = as.factor(Apgar1),\n         Apgar5_factor = as.factor(Apgar5))\nopt %>%\n  select(Apgar1_factor, Apgar5_factor) %>%\n  summary()##  Apgar1_factor Apgar5_factor\n##  9      :440   9      :650  \n##  8      :203   8      : 70  \n##  7      : 67   10     : 35  \n##  6      : 30   7      : 16  \n##  3      : 11   0      :  4  \n##  (Other): 31   (Other):  7  \n##  NA's   : 41   NA's   : 41\nggplot(opt, aes(x = Apgar1_factor)) +\n  geom_bar()\nggplot(opt, aes(x = Apgar5_factor, fill = Black)) +\n  geom_bar(position = \"dodge\")"},{"path":"session-2-1.html","id":"missing-values","chapter":"5 Data Summaries","heading":"5.10 Missing values","text":"","code":""},{"path":"session-2-1.html","id":"ignore-missing-values","chapter":"5 Data Summaries","heading":"5.10.0.1 Ignore missing values","text":"variables missing data. try compute mean BMI returns NA. NA basically means \"know\", sum 100 \"know\" \"know\", 100. However, calculating means, often want just ignore missing values. Set na.rm = TRUE summary function remove missing values calculating.","code":"\n# code that will return NA\nopt %>%\n  summarise(mean_bmi = mean(BMI))\n\n# ignore missing values to return mean\nopt %>%\n  summarise(mean_bmi = mean(BMI, na.rm = TRUE))"},{"path":"session-2-1.html","id":"count-missing-values","chapter":"5 Data Summaries","heading":"5.10.0.2 Count missing values","text":"want find many missing non-missing values column, use .na() function get logical vector whether value missing, use sum() count many values TRUE mean() calculate proportion TRUE values.","code":"\nopt %>%\n  group_by(Black) %>%\n  summarise(\n    n_valid = sum(!is.na(Apgar5_factor)),\n    n_missing = sum(is.na(Apgar5_factor)),\n    prop_missing = mean(is.na(Apgar5_factor))\n  )"},{"path":"session-2-1.html","id":"omit-missing-values","chapter":"5 Data Summaries","heading":"5.10.0.3 Omit missing values","text":"may also want remove rows missing values work complete datasets. drop_na() remove row missing observation. can use drop_na() entire dataset remove row missing value, can specify remove rows missing specific value.Missing data can quite difficult deal depending represented. always, amount coding expertise can make understanding structure idiosyncrasies data.","code":"\n# remove any rows with any missing values\ncomplete_data <- opt %>%\n  drop_na()\n\n# remove any rows that are missing a value for sales\ncomplete_bmi <- opt %>%\n  drop_na(BMI)"},{"path":"session-2-1.html","id":"glossary-summary","chapter":"5 Data Summaries","heading":"5.11 Glossary","text":"","code":""},{"path":"session-2-1.html","id":"resources-summary","chapter":"5 Data Summaries","heading":"5.12 Further resources","text":"Data transformation cheat sheetChapter 5: Data Transformation R Data ScienceTidy Text","code":""},{"path":"advanced-data-viz.html","id":"advanced-data-viz","chapter":"6 Advanced Data Viz","heading":"6 Advanced Data Viz","text":"","code":""},{"path":"advanced-data-viz.html","id":"ilo-intro","chapter":"6 Advanced Data Viz","heading":"6.1 Intended Learning Outcomes","text":"end chapter able :Transform simple data sets wide-form long-formCreate customize advanced types plots","code":""},{"path":"advanced-data-viz.html","id":"reading-3","chapter":"6 Advanced Data Viz","heading":"6.2 Reading","text":"working chapter, read Data Types R.","code":""},{"path":"advanced-data-viz.html","id":"sources","chapter":"6 Advanced Data Viz","heading":"6.3 Sources","text":"final chapter, going adapted version materials taken :Nordmann, E., McAleer, P., Toivo, W., Paterson, H. & DeBruine, L. (accepted). Data visualisation using R, researchers use R. Advances Methods Practices Psychological Science.:Applied Data Skils: Customising visualisations (PsyTeachR team)may find particularly helpful read sources full resource.","code":""},{"path":"advanced-data-viz.html","id":"walkthrough-video-4","chapter":"6 Advanced Data Viz","heading":"6.4 Walkthrough video","text":"encourage read workbook attempt step watching video help consolidate learning.","code":""},{"path":"advanced-data-viz.html","id":"set-up-1","chapter":"6 Advanced Data Viz","heading":"6.5 Set-up","text":"Open course project following:Create save new R Markdown document named chapter_6.Rmd, get rid default template text line 11 onwards.Add code set-chunk run code load packages data.","code":"\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(gapminder)\nlibrary(plotly)\nlibrary(gganimate)\ngapminder_wide <- read_csv(\"https://raw.githubusercontent.com/emilynordmann/AllOfUs-intro-to-r/main/book/data/gapminder_wide.csv\")"},{"path":"advanced-data-viz.html","id":"modified-gapminder-dataset","chapter":"6 Advanced Data Viz","heading":"6.6 Modified Gapminder dataset","text":"dataset loaded modified version gapminder dataset used previous chapters. First, reduced amount data. original data set data every five years 1952 - 2007 includes life expectancy, population, GDP per capita country. reduced just life expectancy 2002 - 2007 make easier work begin basic wrangling.second change data structured wide format. Traditionally, researchers taught data skills using wide-format data. Wide-format data typically one row data participant/entity (case country), separate columns score variable. repeated-measures variables, dependent variable split across different columns. -groups variables, separate column added encode group participant observation belongs.modified Gapminder data now wide format (see TableÂ 6.1), country's life expectancy split across two columns repeated-measures factor (year). data structure typically intuitive humans read enter data , true programming language.Table 6.1: Data wide format.tidyverse functions like ggplot() require data long format. Moving using wide-format long-format data sets can require conceptual shift part researcher one usually comes practice repeated exposure.Rather different observations measurement variable split across columns, single column measurement life expectancy, single column measurement GDP. country however, multiple rows data, one observation (.e., country many rows levels repeated-measures variable, case year). Although repetition country continent, row unique looking combination measures.Table 6.2: Data correct format visualization.can initially difficult figure many variables data set long-form structure look however, useful rule thumb working data R visualization anything shares axis probably column. example, simple boxplot showing life expectancy year (collapsing across countries) display variable year x-axis bars representing 2002 2007 data, lifeExp y-axis. Therefore, data relating year one column, data relating lifeExp separate single column, rather split like wide-format data.","code":""},{"path":"advanced-data-viz.html","id":"wide-to-long-format","chapter":"6 Advanced Data Viz","heading":"6.6.1 Wide to long format","text":"course adapted data set single measurement variable simplify data wrangling. next course, increase complexity data sets tidy, however, worth normalizing trial--error part process learning apply functions new data sets structures. Data visualization can useful way scaffold learning data transformations can provide concrete visual check whether done intended data.","code":""},{"path":"advanced-data-viz.html","id":"pivot_longer","chapter":"6 Advanced Data Viz","heading":"6.6.1.1 pivot_longer()","text":"pivot_longer() function comes tidyverse package tidyr used transform data wide--long.tidyverse functions, first argument specifies dataset use base, case gapminder_wide. argument name often dropped examples.tidyverse functions, first argument specifies dataset use base, case gapminder_wide. argument name often dropped examples.cols specifies columns want transform. easiest way visualise think columns new long-form dataset change. refer back TableÂ 6.1, can see country continent remain, columns contain measurements change. colon notation first_column:last_column used select variables first column specified last (two columns select save us time useful know). code, cols specifies columns want transform lifeExp_2002 lifeExp_2007.cols specifies columns want transform. easiest way visualise think columns new long-form dataset change. refer back TableÂ 6.1, can see country continent remain, columns contain measurements change. colon notation first_column:last_column used select variables first column specified last (two columns select save us time useful know). code, cols specifies columns want transform lifeExp_2002 lifeExp_2007.names_to specifies name new column created. column contain names selected existing columns, call year.names_to specifies name new column created. column contain names selected existing columns, call year.Finally, values_to names new column contain values selected columns. case call lifeExp.Finally, values_to names new column contain values selected columns. case call lifeExp.point may find helpful go back compare dat long see argument matches output table.Table 6.3: Data long format messy labels.","code":"\ngapminder_long <- pivot_longer(gapminder_wide, \n                     cols = lifeExp_2002:lifeExp_2007, \n                     names_to = \"year\", \n                     values_to = \"lifeExp\")"},{"path":"advanced-data-viz.html","id":"step-2-pivot_longer-adjusted","chapter":"6 Advanced Data Viz","heading":"6.6.1.2 Step 2: pivot_longer() adjusted","text":"problem long-format data-set values year taken prior column names bit messy. different ways deal , option choose adjust arguments pivot_longer().First, instead specifying one name names_to, going tell create two columns, label year. additional argument names_sep tells R split information two columns. taking care name variables consistently meaningfully pays . word left separator (_) always DV label word right always condition repeated-measures IV, easy automatically split columns.Table 6.4: Data long format additional name columnsWe can use %>% add select() function drop column label unnecessary.Table 6.5: Data final long formatWe're almost ready analysis now. One final note, careful calculate demographic descriptive statistics long-form data sets. process transformation introduces repetition, wide-format dataset one row equals one country used demographic information. Now experimental data right form, can begin create useful visualizations.","code":"\ngapminder_long <- pivot_longer(data = gapminder_wide, \n                     cols = lifeExp_2002:lifeExp_2007, \n                     names_to = c(\"label\", \"year\"),\n                     names_sep = \"_\", \n                     values_to = \"lifeExp\")\ngapminder_long <- pivot_longer(data = gapminder_wide, \n                     cols = lifeExp_2002:lifeExp_2007, \n                     names_to = c(\"label\", \"year\"),\n                     names_sep = \"_\", \n                     values_to = \"lifeExp\") %>%\n  select(-label)"},{"path":"advanced-data-viz.html","id":"grouped-plots","chapter":"6 Advanced Data Viz","heading":"6.7 Grouped plots","text":"long-form dataset, variable column, much easier specify want create grouped plots.example, can create grouped density plots adding fill = year information year single variable, rather split across columns.can create grouped scatterplot adding mapping year lifeExp adding color = continent.","code":"\nggplot(gapminder_long, aes(x = lifeExp, fill = year)) +\n  geom_density(alpha = 0.75)\nggplot(gapminder_long, aes(x = lifeExp, y = year, color = continent)) +\n  geom_jitter(height = .1, width = 0) "},{"path":"advanced-data-viz.html","id":"accessible-color-schemes","chapter":"6 Advanced Data Viz","heading":"6.8 Accessible color schemes","text":"One drawbacks using ggplot2 visualization default color scheme accessible (visually appealing). red green default palette difficult color-blind people differentiate, also display well greyscale. can specify exact custom colors plots, one easy option use custom color palette. take arguments default scale sister functions updating axis names labels, display plots contrasting colors can read color-blind people also print well grey scale. categorical colors, \"Set2\", \"Dark2\" \"Paired\" palettes brewer scale functions colorblind-safe (hard distinguish grey scale). continuous colors, color representing magnitude correlation tile plot, viridis scale functions provide number different colorblind grey scale-safe options.","code":"\nggplot(gapminder_long, aes(x = lifeExp, y = year, color = continent)) +\n  geom_jitter(height = .1, width = 0) +\n  scale_color_brewer(palette = \"Dark2\",\n                     name = \"Continent\") +\n  theme_minimal()"},{"path":"advanced-data-viz.html","id":"grouped-violin-boxplots","chapter":"6 Advanced Data Viz","heading":"6.8.1 Grouped violin-boxplots","text":"previous plots, another variable can mapped fill violin-boxplot can also use stat_summary() add mean error bars. However, simply adding fill mapping causes different components plot become misaligned different default positions:rectify need adjust argument position misaligned layers. position_dodge() instructs R move (dodge) position plot component specified value; finding value looks best can sometimes take trial error. can also set alpha values make easier distinguish layer plot.","code":"\nggplot(gapminder_long, aes(x = continent, y= lifeExp, fill = year)) +\n  geom_violin() +\n  geom_boxplot(width = .2, \n               fatten = NULL) +\n  stat_summary(fun = \"mean\",  geom = \"point\") +\n  stat_summary(fun.data = \"mean_se\", \n               geom = \"errorbar\", \n               width = .1) +\n  scale_fill_brewer(palette = \"Dark2\") +\n  theme(legend.position = \"bottom\")\nggplot(gapminder_long, aes(x = continent, y= lifeExp, fill = year)) +\n  geom_violin(position = position_dodge(0.9)) +\n  geom_boxplot(width = .2, \n               fatten = NULL,\n               position = position_dodge(0.9)) +\n  stat_summary(fun = \"mean\",  geom = \"point\",\n               position = position_dodge(0.9)) +\n  stat_summary(fun.data = \"mean_se\", \n               geom = \"errorbar\", \n               width = .1,\n               position = position_dodge(0.9)) +\n  scale_fill_brewer(palette = \"Dark2\") +\n  theme(legend.position = \"bottom\")"},{"path":"advanced-data-viz.html","id":"complex-layer-plots","chapter":"6 Advanced Data Viz","heading":"6.8.2 Complex layer plots","text":"complex plot can produced takes advantage layers visualize overall interaction, change across repeated-measures conditions.code complex prior code use universal mapping plot aesthetics. code far, aesthetic mapping (aes) plot specified first line code layers used mapping. However, also possible layer use different mapping -- encourage build plot running line code sequentially see combines.first call ggplot() sets default mappings plot used unless otherwise specified - x, y group variable. Note addition shape, vary shape geom according year variable.geom_point() overrides default mapping setting colour draw data points continent different color. alpha set low value aid readability.Similarly, geom_line() overrides default grouping variable line drawn connect individual data points country (group = country) rather year, also sets colors.Finally, calls stat_summary() remain largely , exception setting colour = \"black\" size = 2 overall means error bars can easily distinguished individual data points. specify individual mapping, use defaults (e.g., lines connected continent). error bars, lines made solid.\nFigure 6.1: Complex layered plot -country data.\n","code":"\nggplot(gapminder_long, aes(x = year, y = lifeExp, \n                     group = continent, shape = continent)) +\n  # adds raw data points in each condition\n  geom_point(aes(colour = continent),alpha = .4) +\n  # add lines to connect each participant's data points across conditions\n  geom_line(aes(group = country, colour = continent), alpha = .6) +\n  # add data points representing cell means\n  stat_summary(fun = \"mean\", geom = \"point\", size = 2, colour = \"black\") +\n  # add lines connecting cell means by condition\n  stat_summary(fun = \"mean\", geom = \"line\", colour = \"black\") +\n  # add errorbars to cell means\n  stat_summary(fun.data = \"mean_se\", geom = \"errorbar\", \n               width = .1, colour = \"black\") +\n  # change colours and theme\n  scale_color_brewer(palette = \"Paired\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\") "},{"path":"advanced-data-viz.html","id":"facets-1","chapter":"6 Advanced Data Viz","heading":"6.9 Facets","text":"situations may useful create separate plots level variable using facets. can also help accessibility used instead addition group colors. code adaptation code used produce histogram may easier see relationship changes data overlaid.Additionally, previously edited main axis labels used scale_* functions. functions useful know allow customize many aspects scale, breaks limits. However, need change main axis name, quicker way using labs() can used add remove (specifying NULL) axis want rename:\nFigure 6.2: Faceted histogram\n","code":"\nggplot(gapminder_long, aes(x = lifeExp)) +\n  geom_histogram(colour = \"black\") +\n  facet_wrap(~continent, nrow = 5) +\n  theme_minimal() +\n  labs(y = NULL, title = \"Life Expectancy by Continent\")## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"advanced-data-viz.html","id":"redundant-aesthetics","chapter":"6 Advanced Data Viz","heading":"6.10 Redundant aesthetics","text":"far produced plots colors, colors way different levels variable indicated, sometimes preferable indicate levels color means, facets x-axis categories.code adds fill = continent histograms use Viridis color palette customize colors. Specifying fill variable means default, R produces legend variable.\nFigure 6.3: Faceted histogram redundant legend\nHowever, use color redundant facet labels, can remove legend guides function make better use plot space:\nFigure 6.4: Faceted histogram redundant legend removed\n","code":"\nggplot(gapminder_long, aes(x = lifeExp, fill = continent)) +\n  geom_histogram(colour = \"black\") +\n  facet_wrap(~continent, nrow = 5) +\n  scale_fill_viridis_d() +\n  theme_minimal() +\n  labs(y = NULL, title = \"Life Expectancy by Continent\")\nggplot(gapminder_long, aes(x = lifeExp, fill = continent)) +\n  geom_histogram(colour = \"black\") +\n  facet_wrap(~continent, nrow = 5) +\n  scale_fill_viridis_d() +\n  guides(fill = \"none\")+\n  theme_minimal() +\n  labs(y = NULL, title = \"Life Expectancy by Continent\")"},{"path":"advanced-data-viz.html","id":"advanced-plots","chapter":"6 Advanced Data Viz","heading":"6.11 Advanced Plots","text":"advanced plots, use custom functions: geom_split_violin() geom_flat_violin(), can access introdataviz package. functions modified Allen et al. (21).","code":"\n# how to install the introdataviz package to get split and half violin plots\ndevtools::install_github(\"psyteachr/introdataviz\")\n\n# if you get the error \"there is no package called \"devtools\" run:\n# install.packages(\"devtools\") "},{"path":"advanced-data-viz.html","id":"split-violin-plots","chapter":"6 Advanced Data Viz","heading":"6.11.1 Split-violin plots","text":"Split-violin plots remove redundancy mirrored violin plots make easier compare distributions multiple conditions. plot also use function filter() just keep data Africa Asia. %% notation means retain values match one possibilities presented:","code":"\ngapminder_long %>%\n  filter(continent %in% c(\"Africa\", \"Asia\")) %>%\n  ggplot(aes(x = year, y= lifeExp, fill = continent)) +\n  introdataviz::geom_split_violin(alpha = .4) +\n  geom_boxplot(width = .2, position = position_dodge(.4)) +\n  scale_fill_brewer(palette = \"Paired\") +\n  theme(legend.position = \"bottom\") +\n  labs(fill = NULL) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")"},{"path":"advanced-data-viz.html","id":"raincloud-plots","chapter":"6 Advanced Data Viz","heading":"6.11.2 Raincloud plots","text":"Raincloud plots combine density plot, boxplot, raw data points, desired summary statistics complete visualization data. called density plot plus raw data reminiscent rain cloud. point line center cloud represents mean 95% CI. rain represents individual data points.incredibly advanced plot expect able create scratch point training. However, hopefully now sense plot built layers working together.","code":"\nrain_height <- .1\n\ngapminder_long %>%\n  filter(continent %in% c(\"Americas\", \"Asia\")) %>%\n  ggplot(aes(x = \"\", y = lifeExp, fill = year)) +\n  # clouds\n  introdataviz::geom_flat_violin(alpha = 0.6,\n    position = position_nudge(x = rain_height+.05)) +\n  # rain\n  geom_point(aes(colour = year), size = 2, alpha = .7, \n              position = position_jitter(width = rain_height, height = 0)) +\n  # boxplots\n  geom_boxplot(width = rain_height, alpha = 0.4, \n               position = position_nudge(x = -rain_height*2)) +\n  # mean and SE point in the cloud\n  stat_summary(fun.data = mean_cl_normal, \n               mapping = aes(color = year), \n               position = position_nudge(x = rain_height * 3)) +\n  # adjust layout\n  scale_x_discrete(name = \"\", expand = c(rain_height*3, 0, 0, 0.7)) +\n  coord_flip() +\n  facet_wrap(~continent, nrow = 2) +\n  # custom colours and theme\n  scale_fill_brewer(palette = \"Accent\", name = \"Continent\") +\n  scale_colour_brewer(palette = \"Accent\") +\n  theme_minimal() +\n  theme(panel.grid.major.y = element_blank(),\n        legend.position = c(0.2, 0.8),\n        legend.background = element_rect(fill = \"white\", color = \"white\")) +\n  guides(fill = \"none\")## Warning: Computation failed in `stat_summary()`\n## Computation failed in `stat_summary()`\n## Caused by error in `fun.data()`:\n## ! The package \"Hmisc\" is required.## Warning: Using the `size` aesthetic with geom_polygon was deprecated in ggplot2 3.4.0.\n## â„¹ Please use the `linewidth` aesthetic instead.\n## This warning is displayed once every 8 hours.\n## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was\n## generated."},{"path":"advanced-data-viz.html","id":"interactive-plots","chapter":"6 Advanced Data Viz","heading":"6.11.3 Interactive plots","text":"plotly package can used make interactive graphs. Assign ggplot variable use function ggplotly() plot object. Note interactive plots work HTML files, PDFs Word files advanced types plots render well (e.g., struggles raincloud plot).example, create grouped scatterplot life expectancy year continent :\nFigure 6.5: Interactive graph using plotly\nHover data points click legend items.However, can also add extra information take advantage interactive plot. add fill = country aesthetic mapping. actually want display main plot, just want plotly variable available also add guides(fill = \"none\") avoid creating huge legend. static version plot looks identical pass ggplotly() now see can identify continent country data point.","code":"\npoint_plot <- ggplot(gapminder_long, aes(x = lifeExp, \n                                         y = year, \n                                         color = continent)) +\n  geom_jitter(height = .1, width = 0) \n\nggplotly(point_plot)\ncountry_plot <- ggplot(gapminder_long, aes(x = lifeExp, \n                                         y = year, \n                                         color = continent,\n                                         fill = country)) +\n  geom_jitter(height = .1, width = 0) +\n  guides(fill = \"none\")\n\nggplotly(country_plot)"},{"path":"advanced-data-viz.html","id":"animated-plots","chapter":"6 Advanced Data Viz","heading":"6.11.4 Animated Plots","text":"Finally, animated plots great way add wow factor reports, can complex make, distracting, accessible, use sparingly data visualization animation really adds something. package gganimate many functions animating ggplots., use original Gapminder data life expectancy every five years 1952, just 2002 2007.make animated plot showing life expectancy region changes year. First, make static plot. Filter data recent year can see single frame animation look like.convert animated plot shows data multiple years:Remove filter add transition_time(year).Use {} syntax include frame_time title.Use anim_save() save animation GIF file set code chunk eval = FALSE creating animation takes long time want run every time knit report.can show animated gif html report (animations work Word PDF) using include_graphics(), include GIF dynamic document like PowerPoint.\nFigure 6.6: Animated gif.\nactually many plots really improved animating . plot gives information single glance.","code":"\ndata(\"gapminder\")\ngapminder %>%\n  filter(year == 2007) %>%\n  ggplot(aes(x = continent, y = lifeExp, fill = continent)) +\n  stat_summary(fun = \"mean\", geom = \"bar\") +\n  scale_fill_viridis_d() +\n  scale_x_discrete(name = \"\", \n                   guide = guide_axis(n.dodge=2)) +\n  ggtitle('Year: 2007')\nanim <- gapminder %>%\n  ggplot(aes(x = continent, y = lifeExp, fill = continent)) +\n  stat_summary(fun = \"mean\", geom = \"bar\") +\n  scale_fill_viridis_d() +\n  scale_x_discrete(name = \"\",\n                   guide = guide_axis(n.dodge=2))+ \n  ggtitle('Year: {frame_time}') +\n  transition_time(year)\n  \ndir.create(\"images\", FALSE) # creates an images directory if needed\n\nanim_save(filename = \"book/images/gganim-demo.gif\",\n          animation = anim,\n          width = 8, height = 5, units = \"in\", res = 150)\nknitr::include_graphics(\"images/gganim-demo.gif\")"},{"path":"advanced-data-viz.html","id":"end-of-workbook","chapter":"6 Advanced Data Viz","heading":"6.12 End of workbook","text":"done workbook! aim course fully proficient R point. new coding, entirely unrealistic unhelpful course claim can fully learn code space couple weeks. Instead, hope demystified many unwritten (badly explained) rules conventions need know use R tools continue learning R independently.","code":""},{"path":"advanced-data-viz.html","id":"next-steps","chapter":"6 Advanced Data Viz","heading":"6.12.1 Next steps","text":"complete course, please attend second office hour session complete completion quiz.course, focused heavily data visualization provides concrete, tangible output efforts. great beginners helps map code output, also anything like Emily, making pretty graphs motivating. second course \"Data wrangling analysis\" (due run Feb 2023) build skills learned go deeper clean, wrangle, process data, well perform basic regression analyses.meantime, like continue learning suggest following steps:Review initial chapters book. Now hands-experience R, information functions packages likely make lot sense.Review resources provided end chapter. particular, like another online book work , highly recommend R Data Science, R Health Data Science, collection materials provided PsyTeachR team.Practice skills functions used course different data sets. either data sets open data find online R packages. little bit wrangling Excel get data format need, feel bad - whatever gets coding good thing eventually able entire workflow R.","code":""},{"path":"advanced-data-viz.html","id":"resources-adviz","chapter":"6 Advanced Data Viz","heading":"6.13 Further Resources","text":"Applied Data Skils: Data visualisation (PsyTeachR team)Applied Data Skils: Customising visualisations (PsyTeachR team)ggplot2 cheat sheetData visualisation using R, researchers use RChapter 3: Data Visualisation R Data Scienceggplot2 FAQsggplot2 documentationChapter 28: Graphics communication R Data Sciencegganimate: package making animated plotsThe R Graph Gallery (really useful)Look Data Data Vizualization Social ScienceGraphs Cookbook RR Graphics Cookbook Winston Changggplot extensionsplotly creating interactive graphs","code":""},{"path":"live-office-hour-2.html","id":"live-office-hour-2","chapter":"7 Live Office Hour 2","heading":"7 Live Office Hour 2","text":"","code":""},{"path":"live-office-hour-2.html","id":"schedule-and-zoom-link-1","chapter":"7 Live Office Hour 2","heading":"7.1 Schedule and Zoom link","text":"second live office hour session take place 4-5pm ET September 28 via Zoom.password 3412 waiting room enabled. Please ensure Zoom name set name used register Us Researcher Academy otherwise may allowed entry session.","code":""},{"path":"live-office-hour-2.html","id":"content-1","chapter":"7 Live Office Hour 2","heading":"7.2 Content","text":"Live office hours primarily opportunity ask questions instructors, get support problems , request additional information aspect course far.Emily lead Q&session material covered workbook Week 1Javan lead Q&session skills learned transfer Us Researcher Workbench.","code":""},{"path":"live-office-hour-2.html","id":"pre-requisites-1","chapter":"7 Live Office Hour 2","heading":"7.3 Pre-requisites","text":"joining office hour, please ensure worked material Week 2 - consult Progress Tracker(0.2 sure need .can ask questions day, can also complete Q&form advance let instructors know like session focus .","code":""},{"path":"completion-quiz.html","id":"completion-quiz","chapter":"8 Completion Quiz","heading":"8 Completion Quiz","text":"order receive recognition Us Researcher Academy completed course, required participate completion quiz.quiz 20 multiple-choice questions assess knowledge R.time limit.completion status based participation quiz, need achieve minimum score.Emily Nordmann access score names people participated quiz communicated RTI completion.can take quiz many times like.deadline completing quiz recognition Friday 18th November midnight.Access quiz via Google Forms.","code":""},{"path":"ai-and-coding.html","id":"ai-and-coding","chapter":"A AI and coding","heading":"A AI and coding","text":"AI tools like ChatGPT exploded functionality popularity last year . section give advice use ChatGPT help support coding, although caveat AI landscape still new continually evolving still learning! suggestions advice add chapter resources, please let us know. guidance based using ChatGPT platform familiar guidance likely apply platforms.","code":""},{"path":"ai-and-coding.html","id":"debugging","chapter":"A AI and coding","heading":"A.1 Debugging","text":"can use ChatGPT help debug errors code. Give ChatGPT code used error ask fix code also explain caused error. second part really important, just blindly copy paste code ChatGPT without understanding code provides. Whilst pretty good, particularly simple tasks, run risk give code","code":""},{"path":"ai-and-coding.html","id":"r-tutor","chapter":"A AI and coding","heading":"A.2 R tutor","text":"can also use ChatGPT tutor give additional explanations understand something course materials. make useful, tell ChatGPT want act (\"act like expert R tutor\") also tell level explanation like (e.g., complete novice, know python, explain simple terms, explain technical terms). way can tailor help provides knowledge skills.","code":""},{"path":"ai-and-coding.html","id":"alternative-methods","chapter":"A AI and coding","heading":"A.3 Alternative methods","text":"One things can make R difficult learn always multiple ways achieving goal. can also make looking help difficult solutions find might written different style (e.g., Base R vs tidyverse). can use ChatGPT identify alternative approaches - need necessarily use , can useful help learn new packages approaches. ask specific alternate approach (\"give alternative solution using base R functions\") just ask alternative solution see produces use \"regenerate\" function see even examples.","code":""},{"path":"ai-and-coding.html","id":"writing-code","chapter":"A AI and coding","heading":"A.4 Writing code","text":"well helping debug explain code written, can also ask ChatGPT write code scratch comes caveats.ChatGPT access recent versions packages functions means code writes may outdated. either mean work package version , might newer packages functions efficient know .already noted, never copy past code understand. always able verify code produces - imagine clock ticking start hearing papers retracted analysis code actually authors thought .Whilst ChatGPT quite good writing code simple tasks, complicated request, likely code provides work first time. learning R complete novice, means whilst use ChatGPT help support learning, many shortcuts can take actually impede progress long-run. skip learning basics going need skills take advantage ChatGPT - make mistake, can super-charge coding massively speed things without solid understanding basics, something go seriously wrong sooner later.sometimes hallucinate (generate false information) packages functions exist. another good reason skip solid foundation knowledge, able spot much quickly gives errors.writing prompts produce code , give much information can:can, tell ChatGPT packages functions want use achieve task.Specify names datasets, variables, information can give .running statistical analyses, give much information want run analysis. sure information might useful, ask ask questions perform analysis .Ask explain piece code can better understand sot potential errors.can see examples differences output via following ChatGPT links:Request basic linear regression modelRequest ordinal regression model specific information dataset approach take","code":""},{"path":"license.html","id":"license","chapter":"License","heading":"License","text":"book licensed Creative Commons Attribution-ShareAlike 4.0 International License (CC--SA 4.0) using PsyTeachR book template (DeBruine, 2021). material book adapted following sources:Nordmann, E. & DeBruine, L. (2022) Applied Data Skills. v1.0. Retrieved https://psyteachr.github.io/ads-v1/ doi: 10.5281/zenodo.6365077Nordmann, E. & McAleer, P. (2021) Fundamentals Quantitative Analysis. v2.0. Retrieved https://psyteachr.github.io/quant-fun-v2/adapt material, must distribute contributions license original.","code":""}]
